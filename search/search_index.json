{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview \uf0c1' pyfairdatatools is a Python package that includes functions of fairhub.io for making data FAIR. This consists of a collection of helpful functions for extracting, transforming raw data, generating relevant metadata files and validating the data and metadata files against the FAIR guidelines adopted by the AI-READI project. Beside supporting fairhub.io , our aim is that the package can be used by anyone wanting to make their data FAIR according to the AI-READI FAIR guidelines. Installation \uf0c1' To install pyfairdatatools , run this command in your terminal: If you use a dependency manager (such as pipenv , poetry , or conda ), you can install as follows: poetry add pyfairdatatools This is the preferred method to install pyfairdatatools, as it will always install the most recent stable release. pipenv install pyfairdatatools conda install pyfairdatatools If you use pip , you can install it as follows: pip install pyfairdatatools If you don't have pip installed, this Python installation guide can guide you through the process. Usage \uf0c1' The pyfairdatatools package contains a collection of methods for working with FAIR data. The package is divided into two main modules: pyfairdatatools.validate and pyfairdatatools.generate . Each module has a collection of methods for validating and generating FAIR data, respectively. Validate \uf0c1' The pyfairdatatools.validate module contains methods for validating data against the FAIR guidelines adopted by the AI-READI project. You can learn more about the methods and how to use them in the validate documentation. Generate \uf0c1' The pyfairdatatools.generate module contains methods for generating data and metadata files that follow the FAIR guidelines adopted by the AI-READI project. You can learn more about the methods and how to use them in the generate documentation.","title":"Home"},{"location":"#overview","text":"pyfairdatatools is a Python package that includes functions of fairhub.io for making data FAIR. This consists of a collection of helpful functions for extracting, transforming raw data, generating relevant metadata files and validating the data and metadata files against the FAIR guidelines adopted by the AI-READI project. Beside supporting fairhub.io , our aim is that the package can be used by anyone wanting to make their data FAIR according to the AI-READI FAIR guidelines.","title":"Overview"},{"location":"#installation","text":"To install pyfairdatatools , run this command in your terminal: If you use a dependency manager (such as pipenv , poetry , or conda ), you can install as follows: poetry add pyfairdatatools This is the preferred method to install pyfairdatatools, as it will always install the most recent stable release. pipenv install pyfairdatatools conda install pyfairdatatools If you use pip , you can install it as follows: pip install pyfairdatatools If you don't have pip installed, this Python installation guide can guide you through the process.","title":"Installation"},{"location":"#usage","text":"The pyfairdatatools package contains a collection of methods for working with FAIR data. The package is divided into two main modules: pyfairdatatools.validate and pyfairdatatools.generate . Each module has a collection of methods for validating and generating FAIR data, respectively.","title":"Usage"},{"location":"#validate","text":"The pyfairdatatools.validate module contains methods for validating data against the FAIR guidelines adopted by the AI-READI project. You can learn more about the methods and how to use them in the validate documentation.","title":"Validate"},{"location":"#generate","text":"The pyfairdatatools.generate module contains methods for generating data and metadata files that follow the FAIR guidelines adopted by the AI-READI project. You can learn more about the methods and how to use them in the generate documentation.","title":"Generate"},{"location":"about/changelog/","text":"Changelog \uf0c1' All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . [Unreleased] \uf0c1' Added \uf0c1' v1.1 Italian translation. [1.1.1] - 2023-03-05 \uf0c1' Added \uf0c1' Arabic translation (#444). v1.1 French translation. v1.1 Dutch translation (#371). v1.1 Russian translation (#410). v1.1 Japanese translation (#363). v1.1 Norwegian Bokm\u00e5l translation (#383). v1.1 \"Inconsistent Changes\" Turkish translation (#347). Default to most recent versions available for each languages Display count of available translations (26 to date!) Centralize all links into /data/links.json so they can be updated easily Fixed \uf0c1' Improve French translation (#377). Improve id-ID translation (#416). Improve Persian translation (#457). Improve Russian translation (#408). Improve Swedish title (#419). Improve zh-CN translation (#359). Improve French translation (#357). Improve zh-TW translation (#360, #355). Improve Spanish (es-ES) transltion (#362). Foldout menu in Dutch translation (#371). Missing periods at the end of each change (#451). Fix missing logo in 1.1 pages Display notice when translation isn't for most recent version Various broken links, page versions, and indentations. Changed \uf0c1' Upgrade dependencies: Ruby 3.2.1, Middleman, etc. Removed \uf0c1' Unused normalize.css file Identical links assigned in each translation file Duplicate index file for the english version [1.1.0] - 2019-02-15 \uf0c1' Added \uf0c1' Danish translation (#297). Georgian translation from (#337). Changelog inconsistency section in Bad Practices. Fixed \uf0c1' Italian translation (#332). Indonesian translation (#336). [1.0.0] - 2017-06-20 \uf0c1' Added \uf0c1' New visual identity by @tylerfortune8 . Version navigation. Links to latest released version in previous versions. \"Why keep a changelog?\" section. \"Who needs a changelog?\" section. \"How do I make a changelog?\" section. \"Frequently Asked Questions\" section. New \"Guiding Principles\" sub-section to \"How do I make a changelog?\". Simplified and Traditional Chinese translations from @tianshuo . German translation from @mpbzh & @Art4 . Italian translation from @azkidenz . Swedish translation from @magol . Turkish translation from @emreerkan . French translation from @zapashcanon . Brazilian Portuguese translation from @Webysther . Polish translation from @amielucha & @m-aciek . Russian translation from @aishek . Czech translation from @h4vry . Slovak translation from @jkostolansky . Korean translation from @pierceh89 . Croatian translation from @porx . Persian translation from @Hameds . Ukrainian translation from @osadchyi-s . Changed \uf0c1' Start using \"changelog\" over \"change log\" since it's the common usage. Start versioning based on the current English version at 0.3.0 to help translation authors keep things up-to-date. Rewrite \"What makes unicorns cry?\" section. Rewrite \"Ignoring Deprecations\" sub-section to clarify the ideal scenario. Improve \"Commit log diffs\" sub-section to further argument against them. Merge \"Why can\u2019t people just use a git log diff?\" with \"Commit log diffs\". Fix typos in Simplified Chinese and Traditional Chinese translations. Fix typos in Brazilian Portuguese translation. Fix typos in Turkish translation. Fix typos in Czech translation. Fix typos in Swedish translation. Improve phrasing in French translation. Fix phrasing and spelling in German translation. Removed \uf0c1' Section about \"changelog\" vs \"CHANGELOG\". [0.3.0] - 2015-12-03 \uf0c1' Added \uf0c1' RU translation from @aishek . pt-BR translation from @tallesl . es-ES translation from @ZeliosAriex . [0.2.0] - 2015-10-06 \uf0c1' Changed \uf0c1' Remove exclusionary mentions of \"open source\" since this project can benefit both \"open\" and \"closed\" source projects equally. [0.1.0] - 2015-10-06 \uf0c1' Added \uf0c1' Answer \"Should you ever rewrite a change log?\". Changed \uf0c1' Improve argument against commit logs. Start following SemVer properly. [0.0.8] - 2015-02-17 \uf0c1' Changed \uf0c1' Update year to match in every README example. Reluctantly stop making fun of Brits only, since most of the world writes dates in a strange way. Fixed \uf0c1' Fix typos in recent README changes. Update outdated unreleased diff link. [0.0.7] - 2015-02-16 \uf0c1' Added \uf0c1' Link, and make it obvious that date format is ISO 8601. Changed \uf0c1' Clarified the section on \"Is there a standard change log format?\". Fixed \uf0c1' Fix Markdown links to tag comparison URL with footnote-style links. [0.0.6] - 2014-12-12 \uf0c1' Added \uf0c1' README section on \"yanked\" releases. [0.0.5] - 2014-08-09 \uf0c1' Added \uf0c1' Markdown links to version tags on release headings. Unreleased section to gather unreleased changes and encourage note keeping prior to releases. [0.0.4] - 2014-08-09 \uf0c1' Added \uf0c1' Better explanation of the difference between the file (\"CHANGELOG\") and its function \"the change log\". Changed \uf0c1' Refer to a \"change log\" instead of a \"CHANGELOG\" throughout the site to differentiate between the file and the purpose of the file \u2014 the logging of changes. Removed \uf0c1' Remove empty sections from CHANGELOG, they occupy too much space and create too much noise in the file. People will have to assume that the missing sections were intentionally left out because they contained no notable changes. [0.0.3] - 2014-08-09 \uf0c1' Added \uf0c1' \"Why should I care?\" section mentioning The Changelog podcast. [0.0.2] - 2014-07-10 \uf0c1' Added \uf0c1' Explanation of the recommended reverse chronological release ordering. [0.0.1] - 2014-05-31 \uf0c1' Added \uf0c1' This CHANGELOG file to hopefully serve as an evolving example of a standardized open source project CHANGELOG. CNAME file to enable GitHub Pages custom domain. README now contains answers to common questions about CHANGELOGs. Good examples and basic guidelines, including proper date formatting. Counter-examples: \"What makes unicorns cry?\".","title":"Release Notes"},{"location":"about/changelog/#changelog","text":"All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning .","title":"Changelog"},{"location":"about/changelog/#unreleased","text":"","title":"[Unreleased]"},{"location":"about/changelog/#added","text":"v1.1 Italian translation.","title":"Added"},{"location":"about/changelog/#111-2023-03-05","text":"","title":"[1.1.1] - 2023-03-05"},{"location":"about/changelog/#added_1","text":"Arabic translation (#444). v1.1 French translation. v1.1 Dutch translation (#371). v1.1 Russian translation (#410). v1.1 Japanese translation (#363). v1.1 Norwegian Bokm\u00e5l translation (#383). v1.1 \"Inconsistent Changes\" Turkish translation (#347). Default to most recent versions available for each languages Display count of available translations (26 to date!) Centralize all links into /data/links.json so they can be updated easily","title":"Added"},{"location":"about/changelog/#fixed","text":"Improve French translation (#377). Improve id-ID translation (#416). Improve Persian translation (#457). Improve Russian translation (#408). Improve Swedish title (#419). Improve zh-CN translation (#359). Improve French translation (#357). Improve zh-TW translation (#360, #355). Improve Spanish (es-ES) transltion (#362). Foldout menu in Dutch translation (#371). Missing periods at the end of each change (#451). Fix missing logo in 1.1 pages Display notice when translation isn't for most recent version Various broken links, page versions, and indentations.","title":"Fixed"},{"location":"about/changelog/#changed","text":"Upgrade dependencies: Ruby 3.2.1, Middleman, etc.","title":"Changed"},{"location":"about/changelog/#removed","text":"Unused normalize.css file Identical links assigned in each translation file Duplicate index file for the english version","title":"Removed"},{"location":"about/changelog/#110-2019-02-15","text":"","title":"[1.1.0] - 2019-02-15"},{"location":"about/changelog/#added_2","text":"Danish translation (#297). Georgian translation from (#337). Changelog inconsistency section in Bad Practices.","title":"Added"},{"location":"about/changelog/#fixed_1","text":"Italian translation (#332). Indonesian translation (#336).","title":"Fixed"},{"location":"about/changelog/#100-2017-06-20","text":"","title":"[1.0.0] - 2017-06-20"},{"location":"about/changelog/#added_3","text":"New visual identity by @tylerfortune8 . Version navigation. Links to latest released version in previous versions. \"Why keep a changelog?\" section. \"Who needs a changelog?\" section. \"How do I make a changelog?\" section. \"Frequently Asked Questions\" section. New \"Guiding Principles\" sub-section to \"How do I make a changelog?\". Simplified and Traditional Chinese translations from @tianshuo . German translation from @mpbzh & @Art4 . Italian translation from @azkidenz . Swedish translation from @magol . Turkish translation from @emreerkan . French translation from @zapashcanon . Brazilian Portuguese translation from @Webysther . Polish translation from @amielucha & @m-aciek . Russian translation from @aishek . Czech translation from @h4vry . Slovak translation from @jkostolansky . Korean translation from @pierceh89 . Croatian translation from @porx . Persian translation from @Hameds . Ukrainian translation from @osadchyi-s .","title":"Added"},{"location":"about/changelog/#changed_1","text":"Start using \"changelog\" over \"change log\" since it's the common usage. Start versioning based on the current English version at 0.3.0 to help translation authors keep things up-to-date. Rewrite \"What makes unicorns cry?\" section. Rewrite \"Ignoring Deprecations\" sub-section to clarify the ideal scenario. Improve \"Commit log diffs\" sub-section to further argument against them. Merge \"Why can\u2019t people just use a git log diff?\" with \"Commit log diffs\". Fix typos in Simplified Chinese and Traditional Chinese translations. Fix typos in Brazilian Portuguese translation. Fix typos in Turkish translation. Fix typos in Czech translation. Fix typos in Swedish translation. Improve phrasing in French translation. Fix phrasing and spelling in German translation.","title":"Changed"},{"location":"about/changelog/#removed_1","text":"Section about \"changelog\" vs \"CHANGELOG\".","title":"Removed"},{"location":"about/changelog/#030-2015-12-03","text":"","title":"[0.3.0] - 2015-12-03"},{"location":"about/changelog/#added_4","text":"RU translation from @aishek . pt-BR translation from @tallesl . es-ES translation from @ZeliosAriex .","title":"Added"},{"location":"about/changelog/#020-2015-10-06","text":"","title":"[0.2.0] - 2015-10-06"},{"location":"about/changelog/#changed_2","text":"Remove exclusionary mentions of \"open source\" since this project can benefit both \"open\" and \"closed\" source projects equally.","title":"Changed"},{"location":"about/changelog/#010-2015-10-06","text":"","title":"[0.1.0] - 2015-10-06"},{"location":"about/changelog/#added_5","text":"Answer \"Should you ever rewrite a change log?\".","title":"Added"},{"location":"about/changelog/#changed_3","text":"Improve argument against commit logs. Start following SemVer properly.","title":"Changed"},{"location":"about/changelog/#008-2015-02-17","text":"","title":"[0.0.8] - 2015-02-17"},{"location":"about/changelog/#changed_4","text":"Update year to match in every README example. Reluctantly stop making fun of Brits only, since most of the world writes dates in a strange way.","title":"Changed"},{"location":"about/changelog/#fixed_2","text":"Fix typos in recent README changes. Update outdated unreleased diff link.","title":"Fixed"},{"location":"about/changelog/#007-2015-02-16","text":"","title":"[0.0.7] - 2015-02-16"},{"location":"about/changelog/#added_6","text":"Link, and make it obvious that date format is ISO 8601.","title":"Added"},{"location":"about/changelog/#changed_5","text":"Clarified the section on \"Is there a standard change log format?\".","title":"Changed"},{"location":"about/changelog/#fixed_3","text":"Fix Markdown links to tag comparison URL with footnote-style links.","title":"Fixed"},{"location":"about/changelog/#006-2014-12-12","text":"","title":"[0.0.6] - 2014-12-12"},{"location":"about/changelog/#added_7","text":"README section on \"yanked\" releases.","title":"Added"},{"location":"about/changelog/#005-2014-08-09","text":"","title":"[0.0.5] - 2014-08-09"},{"location":"about/changelog/#added_8","text":"Markdown links to version tags on release headings. Unreleased section to gather unreleased changes and encourage note keeping prior to releases.","title":"Added"},{"location":"about/changelog/#004-2014-08-09","text":"","title":"[0.0.4] - 2014-08-09"},{"location":"about/changelog/#added_9","text":"Better explanation of the difference between the file (\"CHANGELOG\") and its function \"the change log\".","title":"Added"},{"location":"about/changelog/#changed_6","text":"Refer to a \"change log\" instead of a \"CHANGELOG\" throughout the site to differentiate between the file and the purpose of the file \u2014 the logging of changes.","title":"Changed"},{"location":"about/changelog/#removed_2","text":"Remove empty sections from CHANGELOG, they occupy too much space and create too much noise in the file. People will have to assume that the missing sections were intentionally left out because they contained no notable changes.","title":"Removed"},{"location":"about/changelog/#003-2014-08-09","text":"","title":"[0.0.3] - 2014-08-09"},{"location":"about/changelog/#added_10","text":"\"Why should I care?\" section mentioning The Changelog podcast.","title":"Added"},{"location":"about/changelog/#002-2014-07-10","text":"","title":"[0.0.2] - 2014-07-10"},{"location":"about/changelog/#added_11","text":"Explanation of the recommended reverse chronological release ordering.","title":"Added"},{"location":"about/changelog/#001-2014-05-31","text":"","title":"[0.0.1] - 2014-05-31"},{"location":"about/changelog/#added_12","text":"This CHANGELOG file to hopefully serve as an evolving example of a standardized open source project CHANGELOG. CNAME file to enable GitHub Pages custom domain. README now contains answers to common questions about CHANGELOGs. Good examples and basic guidelines, including proper date formatting. Counter-examples: \"What makes unicorns cry?\".","title":"Added"},{"location":"about/contributing/","text":"Contributing to pyfairdatatools \uf0c1' First off, thanks for taking the time to contribute! \u2764\ufe0f All types of contributions are encouraged and valued. See the Table of Contents for different ways to help and details about how this project handles them. Please make sure to read the relevant section before making your contribution. It will make it a lot easier for us maintainers and smooth out the experience for all involved. The community looks forward to your contributions. \ud83c\udf89 And if you like the project, but just don't have time to contribute, that's fine. There are other easy ways to support the project and show your appreciation, which we would also be very happy about: Star the project Tweet about it Refer this project in your project's readme Table of Contents \uf0c1' I Have a Question I Want To Contribute Reporting Bugs Suggesting Enhancements I Have a Question \uf0c1' If you want to ask a question, we assume that you have read the available Documentation . Before you ask a question, it is best to search for existing Issues that might help you. In case you have found a suitable issue and still need clarification, you can write your question in this issue. It is also advisable to search the internet for answers first. If you then still feel the need to ask a question and need clarification, we recommend the following: Open an Issue . Provide as much context as you can about what you're running into. Provide project and platform versions (nodejs, npm, etc), depending on what seems relevant. We will then take care of the issue as soon as possible. I Want To Contribute \uf0c1' Legal Notice \uf0c1' When contributing to this project, you must agree that you have authored 100% of the content, that you have the necessary rights to the content and that the content you contribute may be provided under the project license. Reporting Bugs \uf0c1' Before Submitting a Bug Report \uf0c1' A good bug report shouldn't leave others needing to chase you up for more information. Therefore, we ask you to investigate carefully, collect information and describe the issue in detail in your report. Please complete the following steps in advance to help us fix any potential bug as fast as possible. Make sure that you are using the latest version. Determine if your bug is really a bug and not an error on your side e.g. using incompatible environment components/versions (Make sure that you have read the documentation . If you are looking for support, you might want to check this section ). To see if other users have experienced (and potentially already solved) the same issue you are having, check if there is not already a bug report existing for your bug or error in the bug tracker . Also make sure to search the internet (including Stack Overflow) to see if users outside of the GitHub community have discussed the issue. Collect information about the bug: Stack trace (Traceback) OS, Platform and Version (Windows, Linux, macOS, x86, ARM) Version of the interpreter, compiler, SDK, runtime environment, package manager, depending on what seems relevant. Possibly your input and the output Can you reliably reproduce the issue? And can you also reproduce it with older versions? How Do I Submit a Good Bug Report? \uf0c1' We use GitHub issues to track bugs and errors. If you run into an issue with the project: Open an Issue . (Since we can't be sure at this point whether it is a bug or not, we ask you not to talk about a bug yet and not to label the issue.) Explain the behavior you would expect and the actual behavior. Please provide as much context as possible and describe the reproduction steps that someone else can follow to recreate the issue on their own. This usually includes your code. For good bug reports you should isolate the problem and create a reduced test case. Provide the information you collected in the previous section. Once it's filed: The project team will label the issue accordingly. A team member will try to reproduce the issue with your provided steps. If there are no reproduction steps or no obvious way to reproduce the issue, the team will ask you for those steps and mark the issue as needs-repro . Bugs with the needs-repro tag will not be addressed until they are reproduced. If the team is able to reproduce the issue, it will be marked needs-fix , as well as possibly other tags (such as critical ), and the issue will be left to be implemented by someone . Suggesting Enhancements \uf0c1' This section guides you through submitting an enhancement suggestion for pyfairdatatools, including completely new features and minor improvements to existing functionality . Following these guidelines will help maintainers and the community to understand your suggestion and find related suggestions. Before Submitting an Enhancement \uf0c1' Make sure that you are using the latest version. Read the documentation carefully and find out if the functionality is already covered, maybe by an individual configuration. Perform a search to see if the enhancement has already been suggested. If it has, add a comment to the existing issue instead of opening a new one. Find out whether your idea fits with the scope and aims of the project. It's up to you to make a strong case to convince the project's developers of the merits of this feature. Keep in mind that we want features that will be useful to the majority of our users and not just a small subset. If you're just targeting a minority of users, consider writing an add-on/plugin library. How Do I Submit a Good Enhancement Suggestion? \uf0c1' Enhancement suggestions are tracked as GitHub issues . Use a clear and descriptive title for the issue to identify the suggestion. Provide a step-by-step description of the suggested enhancement in as many details as possible. Describe the current behavior and explain which behavior you expected to see instead and why. At this point you can also tell which alternatives do not work for you. You may want to include screenshots and animated GIFs which help you demonstrate the steps or point out the part which the suggestion is related to. You can use this tool to record GIFs on macOS and Windows, and this tool or this tool on Linux. Explain why this enhancement would be useful to most pyfairdatatools users. You may also want to point out the other projects that solved it better and which could serve as inspiration.","title":"Contributor Guide"},{"location":"about/contributing/#contributing-to-pyfairdatatools","text":"First off, thanks for taking the time to contribute! \u2764\ufe0f All types of contributions are encouraged and valued. See the Table of Contents for different ways to help and details about how this project handles them. Please make sure to read the relevant section before making your contribution. It will make it a lot easier for us maintainers and smooth out the experience for all involved. The community looks forward to your contributions. \ud83c\udf89 And if you like the project, but just don't have time to contribute, that's fine. There are other easy ways to support the project and show your appreciation, which we would also be very happy about: Star the project Tweet about it Refer this project in your project's readme","title":"Contributing to pyfairdatatools"},{"location":"about/contributing/#table-of-contents","text":"I Have a Question I Want To Contribute Reporting Bugs Suggesting Enhancements","title":"Table of Contents"},{"location":"about/contributing/#i-have-a-question","text":"If you want to ask a question, we assume that you have read the available Documentation . Before you ask a question, it is best to search for existing Issues that might help you. In case you have found a suitable issue and still need clarification, you can write your question in this issue. It is also advisable to search the internet for answers first. If you then still feel the need to ask a question and need clarification, we recommend the following: Open an Issue . Provide as much context as you can about what you're running into. Provide project and platform versions (nodejs, npm, etc), depending on what seems relevant. We will then take care of the issue as soon as possible.","title":"I Have a Question"},{"location":"about/contributing/#i-want-to-contribute","text":"","title":"I Want To Contribute"},{"location":"about/contributing/#legal-notice","text":"When contributing to this project, you must agree that you have authored 100% of the content, that you have the necessary rights to the content and that the content you contribute may be provided under the project license.","title":"Legal Notice"},{"location":"about/contributing/#reporting-bugs","text":"","title":"Reporting Bugs"},{"location":"about/contributing/#before-submitting-a-bug-report","text":"A good bug report shouldn't leave others needing to chase you up for more information. Therefore, we ask you to investigate carefully, collect information and describe the issue in detail in your report. Please complete the following steps in advance to help us fix any potential bug as fast as possible. Make sure that you are using the latest version. Determine if your bug is really a bug and not an error on your side e.g. using incompatible environment components/versions (Make sure that you have read the documentation . If you are looking for support, you might want to check this section ). To see if other users have experienced (and potentially already solved) the same issue you are having, check if there is not already a bug report existing for your bug or error in the bug tracker . Also make sure to search the internet (including Stack Overflow) to see if users outside of the GitHub community have discussed the issue. Collect information about the bug: Stack trace (Traceback) OS, Platform and Version (Windows, Linux, macOS, x86, ARM) Version of the interpreter, compiler, SDK, runtime environment, package manager, depending on what seems relevant. Possibly your input and the output Can you reliably reproduce the issue? And can you also reproduce it with older versions?","title":"Before Submitting a Bug Report"},{"location":"about/contributing/#how-do-i-submit-a-good-bug-report","text":"We use GitHub issues to track bugs and errors. If you run into an issue with the project: Open an Issue . (Since we can't be sure at this point whether it is a bug or not, we ask you not to talk about a bug yet and not to label the issue.) Explain the behavior you would expect and the actual behavior. Please provide as much context as possible and describe the reproduction steps that someone else can follow to recreate the issue on their own. This usually includes your code. For good bug reports you should isolate the problem and create a reduced test case. Provide the information you collected in the previous section. Once it's filed: The project team will label the issue accordingly. A team member will try to reproduce the issue with your provided steps. If there are no reproduction steps or no obvious way to reproduce the issue, the team will ask you for those steps and mark the issue as needs-repro . Bugs with the needs-repro tag will not be addressed until they are reproduced. If the team is able to reproduce the issue, it will be marked needs-fix , as well as possibly other tags (such as critical ), and the issue will be left to be implemented by someone .","title":"How Do I Submit a Good Bug Report?"},{"location":"about/contributing/#suggesting-enhancements","text":"This section guides you through submitting an enhancement suggestion for pyfairdatatools, including completely new features and minor improvements to existing functionality . Following these guidelines will help maintainers and the community to understand your suggestion and find related suggestions.","title":"Suggesting Enhancements"},{"location":"about/contributing/#before-submitting-an-enhancement","text":"Make sure that you are using the latest version. Read the documentation carefully and find out if the functionality is already covered, maybe by an individual configuration. Perform a search to see if the enhancement has already been suggested. If it has, add a comment to the existing issue instead of opening a new one. Find out whether your idea fits with the scope and aims of the project. It's up to you to make a strong case to convince the project's developers of the merits of this feature. Keep in mind that we want features that will be useful to the majority of our users and not just a small subset. If you're just targeting a minority of users, consider writing an add-on/plugin library.","title":"Before Submitting an Enhancement"},{"location":"about/contributing/#how-do-i-submit-a-good-enhancement-suggestion","text":"Enhancement suggestions are tracked as GitHub issues . Use a clear and descriptive title for the issue to identify the suggestion. Provide a step-by-step description of the suggested enhancement in as many details as possible. Describe the current behavior and explain which behavior you expected to see instead and why. At this point you can also tell which alternatives do not work for you. You may want to include screenshots and animated GIFs which help you demonstrate the steps or point out the part which the suggestion is related to. You can use this tool to record GIFs on macOS and Windows, and this tool or this tool on Linux. Explain why this enhancement would be useful to most pyfairdatatools users. You may also want to point out the other projects that solved it better and which could serve as inspiration.","title":"How Do I Submit a Good Enhancement Suggestion?"},{"location":"about/license/","text":"MIT License \uf0c1' Copyright (c) 2023 FAIR Data Innovations Hub Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"about/license/#mit-license","text":"Copyright (c) 2023 FAIR Data Innovations Hub Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"modules/generate/","text":"Generation \uf0c1' Introduction \uf0c1' The generate module provides a way of generating metadata files that follow the FAIR guidelines adopted by the AI-READI project. Warning The generate module is still under development. Note The generate module of this package uses the validate module internally to verify that the input data follows the required schema. Methods \uf0c1' The following methods are available in the generate module. Each method is described in detail below. Generate Dataset Description \uf0c1' You can call the generate_dataset_description method to generate a dataset_description file. Parameters \uf0c1' data \uf0c1' Provide the data required for your dataset_description file in this paramater. Type Default value Required Accepted values Object {} yes Data object following the required schemas More information about the required data can be found in the dataset_description schema. file_path \uf0c1' Provide the path to the file where you want to save the generated dataset_description file. Type Default value Required Accepted values String None yes Any string file_type \uf0c1' Provide the file type of the file where you want to save the generated dataset_description file. Type Default value Required Accepted values String None yes json , xml , xlsx , csv Returns \uf0c1' Type Description String Returns the path to the generated dataset_description file as a string. How to use \uf0c1' from pyfairdatatools import generate data = { \"title\": \"My Dataset\", \"identifier\": \"10.5281/zenodo.1234567\", \"identifierType\": \"DOI\" } output = generate.generate_dataset_description(data = data, file_path = \"dataset_description.json\", file_type = \"json\") print(output) # dataset_description.json Generate Study Description \uf0c1' You can call the generate_study_description method to generate a study_description file. Generate Study Description from Clinical Trial integration \uf0c1' You can call the generate_study_description_from_clinical_trials method to generate an initial study_description file. Parameters \uf0c1' data \uf0c1' Provide the data required for your study_description file in this paramater. Type Default value Required Accepted values Object {} yes Data object following the required schemas More information about the required data can be found in the study_description schema. file_path \uf0c1' Provide the path to the file where you want to save the generated study_description file. Type Default value Required Accepted values String None yes Any string file_type \uf0c1' Provide the file type of the file where you want to save the generated study_description file. Type Default value Required Accepted values String None yes json , xml , xlsx , csv Returns \uf0c1' Type Description String Returns the path to the generated study_description file as a string. How to use \uf0c1' from pyfairdatatools import generate data = { \"title\": \"My Dataset\", \"identifier\": \"10.5281/zenodo.1234567\", \"identifierType\": \"DOI\" } output = generate.generate_study_description(data = data, file_path = \"study_description.json\", file_type = \"json\") print(output) # study_description.json Generate Readme \uf0c1' You can call the generate_readme method to generate a readme file. Parameters \uf0c1' data \uf0c1' Provide the data required for your readme file in this paramater. Type Default value Required Accepted values Object {} yes Data object following the required schemas More information about the required data can be found in the readme schema. file_path \uf0c1' Provide the path to the file where you want to save the generated readme file. Type Default value Required Accepted values String None yes Any string file_type \uf0c1' Provide the file type of the file where you want to save the generated readme file. Type Default value Required Accepted values String None yes md , txt Returns \uf0c1' Type Description String Returns the path to the generated readme file as a string. How to use \uf0c1' from pyfairdatatools import generate data = { \"Title\": \"My Dataset\", \"Identifier\": \"10.5281/zenodo.1234567\", \"Version\": \"1.0.0\", } output = generate.generate_readme(data = data, file_path = \"readme.md\", file_type = \"md\") print(output) # readme.md Generate Changelog \uf0c1' You can call the generate_changelog method to generate a changelog file. Parameters \uf0c1' data \uf0c1' Provide the content of the changelog file in this paramater. Type Default value Required Accepted values String None yes Any string file_path \uf0c1' Provide the path to the file where you want to save the generated changelog file. Type Default value Required Accepted values String None yes Any string file_type \uf0c1' Provide the file type of the file where you want to save the generated changelog file. Type Default value Required Accepted values String None yes md , txt Returns \uf0c1' Type Description String Returns the path to the generated changelog file as a string. How to use \uf0c1' from pyfairdatatools import generate data = \"\"\" # Changelog ## 1.0.0 - Initial release \"\"\" output = generate.generate_changelog(data = data, file_path = \"changelog.md\", file_type = \"md\") print(output) # changelog.md Generate License \uf0c1' You can call the generate_license method to generate a license file. Parameters \uf0c1' identifier \uf0c1' Provide the identifier of the license you want to use in this paramater. Type Default value Required Accepted values String \"\" yes SPDX license identifier For a list of all SPDX license identifiers, see here . Warning If you provide an invalid identifier, the method will raise an error. If you want to use a custom license, use the data parameter instead and provide the content of the license file. Leave this parameter empty if you are using custom license text. data \uf0c1' Provide the content of the license file in this paramater. Type Default value Required Accepted values String None yes Any string Warning Use this parameter if you want to use a custom license. Leave this parameter empty if you are using a SPDX license identifier. If you provide a SPDX license identifier, the method will prioritize this parameter over the identifier parameter. file_path \uf0c1' Provide the path to the file where you want to save the generated license file. Type Default value Required Accepted values String None yes Any string file_type \uf0c1' Provide the file type of the file where you want to save the generated license file. Type Default value Required Accepted values String None yes md , txt Returns \uf0c1' Type Description String Returns the path to the generated license file as a string. How to use \uf0c1' from pyfairdatatools import generate data = \"\"\" MIT License SPDX short identifier: MIT Further resources on the MIT License - [Text](https://spdx.org/licenses/MIT.html) - [JSON](https://spdx.org/licenses/MIT.json) - [RDF](https://spdx.org/licenses/MIT.rdf) - [HTML](https://spdx.org/licenses/MIT.html) \"\"\" output = generate.generate_license(identifier = \"MIT\", data = data, file_path = \"LICENSE.md\", file_type = \"md\") print(output) # LICENSE.md To create a license file using a SPDX license identifier: from pyfairdatatools import generate identifier = \"MIT\" output = generate.generate_license(identifier = identifier, file_path = \"LICENSE.md\", file_type = \"md\") print(output) # LICENSE.md","title":"Generate"},{"location":"modules/generate/#generation","text":"","title":"Generation"},{"location":"modules/generate/#introduction","text":"The generate module provides a way of generating metadata files that follow the FAIR guidelines adopted by the AI-READI project. Warning The generate module is still under development. Note The generate module of this package uses the validate module internally to verify that the input data follows the required schema.","title":"Introduction"},{"location":"modules/generate/#methods","text":"The following methods are available in the generate module. Each method is described in detail below.","title":"Methods"},{"location":"modules/generate/#generate-dataset-description","text":"You can call the generate_dataset_description method to generate a dataset_description file.","title":"Generate Dataset Description"},{"location":"modules/generate/#parameters","text":"","title":"Parameters"},{"location":"modules/generate/#data","text":"Provide the data required for your dataset_description file in this paramater. Type Default value Required Accepted values Object {} yes Data object following the required schemas More information about the required data can be found in the dataset_description schema.","title":"data"},{"location":"modules/generate/#file_path","text":"Provide the path to the file where you want to save the generated dataset_description file. Type Default value Required Accepted values String None yes Any string","title":"file_path"},{"location":"modules/generate/#file_type","text":"Provide the file type of the file where you want to save the generated dataset_description file. Type Default value Required Accepted values String None yes json , xml , xlsx , csv","title":"file_type"},{"location":"modules/generate/#returns","text":"Type Description String Returns the path to the generated dataset_description file as a string.","title":"Returns"},{"location":"modules/generate/#how-to-use","text":"from pyfairdatatools import generate data = { \"title\": \"My Dataset\", \"identifier\": \"10.5281/zenodo.1234567\", \"identifierType\": \"DOI\" } output = generate.generate_dataset_description(data = data, file_path = \"dataset_description.json\", file_type = \"json\") print(output) # dataset_description.json","title":"How to use"},{"location":"modules/generate/#generate-study-description","text":"You can call the generate_study_description method to generate a study_description file.","title":"Generate Study Description"},{"location":"modules/generate/#generate-study-description-from-clinical-trial-integration","text":"You can call the generate_study_description_from_clinical_trials method to generate an initial study_description file.","title":"Generate Study Description from Clinical Trial integration"},{"location":"modules/generate/#parameters_1","text":"","title":"Parameters"},{"location":"modules/generate/#data_1","text":"Provide the data required for your study_description file in this paramater. Type Default value Required Accepted values Object {} yes Data object following the required schemas More information about the required data can be found in the study_description schema.","title":"data"},{"location":"modules/generate/#file_path_1","text":"Provide the path to the file where you want to save the generated study_description file. Type Default value Required Accepted values String None yes Any string","title":"file_path"},{"location":"modules/generate/#file_type_1","text":"Provide the file type of the file where you want to save the generated study_description file. Type Default value Required Accepted values String None yes json , xml , xlsx , csv","title":"file_type"},{"location":"modules/generate/#returns_1","text":"Type Description String Returns the path to the generated study_description file as a string.","title":"Returns"},{"location":"modules/generate/#how-to-use_1","text":"from pyfairdatatools import generate data = { \"title\": \"My Dataset\", \"identifier\": \"10.5281/zenodo.1234567\", \"identifierType\": \"DOI\" } output = generate.generate_study_description(data = data, file_path = \"study_description.json\", file_type = \"json\") print(output) # study_description.json","title":"How to use"},{"location":"modules/generate/#generate-readme","text":"You can call the generate_readme method to generate a readme file.","title":"Generate Readme"},{"location":"modules/generate/#parameters_2","text":"","title":"Parameters"},{"location":"modules/generate/#data_2","text":"Provide the data required for your readme file in this paramater. Type Default value Required Accepted values Object {} yes Data object following the required schemas More information about the required data can be found in the readme schema.","title":"data"},{"location":"modules/generate/#file_path_2","text":"Provide the path to the file where you want to save the generated readme file. Type Default value Required Accepted values String None yes Any string","title":"file_path"},{"location":"modules/generate/#file_type_2","text":"Provide the file type of the file where you want to save the generated readme file. Type Default value Required Accepted values String None yes md , txt","title":"file_type"},{"location":"modules/generate/#returns_2","text":"Type Description String Returns the path to the generated readme file as a string.","title":"Returns"},{"location":"modules/generate/#how-to-use_2","text":"from pyfairdatatools import generate data = { \"Title\": \"My Dataset\", \"Identifier\": \"10.5281/zenodo.1234567\", \"Version\": \"1.0.0\", } output = generate.generate_readme(data = data, file_path = \"readme.md\", file_type = \"md\") print(output) # readme.md","title":"How to use"},{"location":"modules/generate/#generate-changelog","text":"You can call the generate_changelog method to generate a changelog file.","title":"Generate Changelog"},{"location":"modules/generate/#parameters_3","text":"","title":"Parameters"},{"location":"modules/generate/#data_3","text":"Provide the content of the changelog file in this paramater. Type Default value Required Accepted values String None yes Any string","title":"data"},{"location":"modules/generate/#file_path_3","text":"Provide the path to the file where you want to save the generated changelog file. Type Default value Required Accepted values String None yes Any string","title":"file_path"},{"location":"modules/generate/#file_type_3","text":"Provide the file type of the file where you want to save the generated changelog file. Type Default value Required Accepted values String None yes md , txt","title":"file_type"},{"location":"modules/generate/#returns_3","text":"Type Description String Returns the path to the generated changelog file as a string.","title":"Returns"},{"location":"modules/generate/#how-to-use_3","text":"from pyfairdatatools import generate data = \"\"\" # Changelog ## 1.0.0 - Initial release \"\"\" output = generate.generate_changelog(data = data, file_path = \"changelog.md\", file_type = \"md\") print(output) # changelog.md","title":"How to use"},{"location":"modules/generate/#generate-license","text":"You can call the generate_license method to generate a license file.","title":"Generate License"},{"location":"modules/generate/#parameters_4","text":"","title":"Parameters"},{"location":"modules/generate/#identifier","text":"Provide the identifier of the license you want to use in this paramater. Type Default value Required Accepted values String \"\" yes SPDX license identifier For a list of all SPDX license identifiers, see here . Warning If you provide an invalid identifier, the method will raise an error. If you want to use a custom license, use the data parameter instead and provide the content of the license file. Leave this parameter empty if you are using custom license text.","title":"identifier"},{"location":"modules/generate/#data_4","text":"Provide the content of the license file in this paramater. Type Default value Required Accepted values String None yes Any string Warning Use this parameter if you want to use a custom license. Leave this parameter empty if you are using a SPDX license identifier. If you provide a SPDX license identifier, the method will prioritize this parameter over the identifier parameter.","title":"data"},{"location":"modules/generate/#file_path_4","text":"Provide the path to the file where you want to save the generated license file. Type Default value Required Accepted values String None yes Any string","title":"file_path"},{"location":"modules/generate/#file_type_4","text":"Provide the file type of the file where you want to save the generated license file. Type Default value Required Accepted values String None yes md , txt","title":"file_type"},{"location":"modules/generate/#returns_4","text":"Type Description String Returns the path to the generated license file as a string.","title":"Returns"},{"location":"modules/generate/#how-to-use_4","text":"from pyfairdatatools import generate data = \"\"\" MIT License SPDX short identifier: MIT Further resources on the MIT License - [Text](https://spdx.org/licenses/MIT.html) - [JSON](https://spdx.org/licenses/MIT.json) - [RDF](https://spdx.org/licenses/MIT.rdf) - [HTML](https://spdx.org/licenses/MIT.html) \"\"\" output = generate.generate_license(identifier = \"MIT\", data = data, file_path = \"LICENSE.md\", file_type = \"md\") print(output) # LICENSE.md To create a license file using a SPDX license identifier: from pyfairdatatools import generate identifier = \"MIT\" output = generate.generate_license(identifier = identifier, file_path = \"LICENSE.md\", file_type = \"md\") print(output) # LICENSE.md","title":"How to use"},{"location":"modules/validate/","text":"Validation \uf0c1' Introduction \uf0c1' The validation module provides a way to validate data against a set of rules. Warning The validation module is still under development. Note The generate module of this package uses this validate module internally to verify that the input data follows the required schema. Methods \uf0c1' The following methods are available in the validate module. Each method is described in detail below. Validate Dataset Description \uf0c1' You can call the validate_dataset_description method to validate the data needed to create a dataset_description file. Parameters \uf0c1' data \uf0c1' Provide the data required for your dataset_description file in this paramater. Type Default value Required Accepted values Object {} yes Data object following the required schemas More information about the required data can be found in the dataset_description schema. You can the hosted validator here if you want a better understanding or visualization of the schema for the input. Returns \uf0c1' Type Description Boolean Returns True if the data is valid, False otherwise. How to use \uf0c1' from pyfairdatatools import validate data = { \"title\": \"My Dataset\", \"identifier\": \"10.5281/zenodo.1234567\", \"identifierType\": \"DOI\" } output = validate.validate_dataset_description(data = data) print(output) # True Validate Study Description \uf0c1' You can call the validate_study_description method to validate the data needed to create a study_description file. Parameters \uf0c1' data \uf0c1' Provide the data required for your study_description file in this paramater. Type Default value Required Accepted values Object {} yes Data object following the required schemas More information about the required data can be found in the study_description schema. You can host the validator here if you want a better understanding or visualization of the schema for the input. Returns \uf0c1' Type Description Boolean Returns True if the data is valid, False otherwise. How to use \uf0c1' from pyfairdatatools import validate data = { \"Title\": \"My Dataset\", \"Identifier\": \"10.5281/zenodo.1234567\", \"IdentifierType\": \"DOI\" } output = validate.validate_study_description(data = data) print(output) # True Validate Readme \uf0c1' You can call the validate_readme method to validate the data needed to create a README file. Parameters \uf0c1' data \uf0c1' Provide the data required for your README file in this paramater. Type Default value Required Accepted values Object {} yes Data object following the required schemas More information about the required data can be found in the README schema. You can host the validator here if you want a better understanding or visualization of the schema for the input. Returns \uf0c1' Type Description Boolean Returns True if the data is valid, False otherwise. How to use \uf0c1' from pyfairdatatools import validate data = { \"title\": \"My Dataset\", \"identifier\": \"10.5281/zenodo.1234567\", \"version\": \"1.0.0\", } output = validate.validate_readme(data = data) print(output) # True Validate License \uf0c1' You can call the validate_license method to validate the data needed to create a LICENSE file. Parameters \uf0c1' identifier \uf0c1' Provide the identifier of the license you want to validate. Type Default value Required Accepted values String \"\" yes SPDX license identifier For a list of all SPDX license identifiers, see here . Returns \uf0c1' Type Description Boolean Returns True if the data is valid, False otherwise. How to use \uf0c1' from pyfairdatatools import validate identifier = \"CC-BY-4.0\" output = validate.validate_license(identifier = identifier) print(output) # True Validate Participants \uf0c1' You can call the validate_participants method to validate the data needed to create a participants.tsv file. Parameters \uf0c1' data \uf0c1' Provide the data required for your participants.tsv file in this paramater. Type Default value Required Accepted values Object {} yes Data object following the required schemas More information about the required data can be found in the participants schema. You can host the validator here if you want a better understanding or visualization of the schema for the input. Returns \uf0c1' Type Description Boolean Returns True if the data is valid, False otherwise. How to use \uf0c1' from pyfairdatatools import validate data = { \"participant_id\": 'sub-id1', \"species\": 'rattus norvegicus', \"age\": 2 } output = validate.validate_participants(data = data) print(output) # True","title":"Validate"},{"location":"modules/validate/#validation","text":"","title":"Validation"},{"location":"modules/validate/#introduction","text":"The validation module provides a way to validate data against a set of rules. Warning The validation module is still under development. Note The generate module of this package uses this validate module internally to verify that the input data follows the required schema.","title":"Introduction"},{"location":"modules/validate/#methods","text":"The following methods are available in the validate module. Each method is described in detail below.","title":"Methods"},{"location":"modules/validate/#validate-dataset-description","text":"You can call the validate_dataset_description method to validate the data needed to create a dataset_description file.","title":"Validate Dataset Description"},{"location":"modules/validate/#parameters","text":"","title":"Parameters"},{"location":"modules/validate/#data","text":"Provide the data required for your dataset_description file in this paramater. Type Default value Required Accepted values Object {} yes Data object following the required schemas More information about the required data can be found in the dataset_description schema. You can the hosted validator here if you want a better understanding or visualization of the schema for the input.","title":"data"},{"location":"modules/validate/#returns","text":"Type Description Boolean Returns True if the data is valid, False otherwise.","title":"Returns"},{"location":"modules/validate/#how-to-use","text":"from pyfairdatatools import validate data = { \"title\": \"My Dataset\", \"identifier\": \"10.5281/zenodo.1234567\", \"identifierType\": \"DOI\" } output = validate.validate_dataset_description(data = data) print(output) # True","title":"How to use"},{"location":"modules/validate/#validate-study-description","text":"You can call the validate_study_description method to validate the data needed to create a study_description file.","title":"Validate Study Description"},{"location":"modules/validate/#parameters_1","text":"","title":"Parameters"},{"location":"modules/validate/#data_1","text":"Provide the data required for your study_description file in this paramater. Type Default value Required Accepted values Object {} yes Data object following the required schemas More information about the required data can be found in the study_description schema. You can host the validator here if you want a better understanding or visualization of the schema for the input.","title":"data"},{"location":"modules/validate/#returns_1","text":"Type Description Boolean Returns True if the data is valid, False otherwise.","title":"Returns"},{"location":"modules/validate/#how-to-use_1","text":"from pyfairdatatools import validate data = { \"Title\": \"My Dataset\", \"Identifier\": \"10.5281/zenodo.1234567\", \"IdentifierType\": \"DOI\" } output = validate.validate_study_description(data = data) print(output) # True","title":"How to use"},{"location":"modules/validate/#validate-readme","text":"You can call the validate_readme method to validate the data needed to create a README file.","title":"Validate Readme"},{"location":"modules/validate/#parameters_2","text":"","title":"Parameters"},{"location":"modules/validate/#data_2","text":"Provide the data required for your README file in this paramater. Type Default value Required Accepted values Object {} yes Data object following the required schemas More information about the required data can be found in the README schema. You can host the validator here if you want a better understanding or visualization of the schema for the input.","title":"data"},{"location":"modules/validate/#returns_2","text":"Type Description Boolean Returns True if the data is valid, False otherwise.","title":"Returns"},{"location":"modules/validate/#how-to-use_2","text":"from pyfairdatatools import validate data = { \"title\": \"My Dataset\", \"identifier\": \"10.5281/zenodo.1234567\", \"version\": \"1.0.0\", } output = validate.validate_readme(data = data) print(output) # True","title":"How to use"},{"location":"modules/validate/#validate-license","text":"You can call the validate_license method to validate the data needed to create a LICENSE file.","title":"Validate License"},{"location":"modules/validate/#parameters_3","text":"","title":"Parameters"},{"location":"modules/validate/#identifier","text":"Provide the identifier of the license you want to validate. Type Default value Required Accepted values String \"\" yes SPDX license identifier For a list of all SPDX license identifiers, see here .","title":"identifier"},{"location":"modules/validate/#returns_3","text":"Type Description Boolean Returns True if the data is valid, False otherwise.","title":"Returns"},{"location":"modules/validate/#how-to-use_3","text":"from pyfairdatatools import validate identifier = \"CC-BY-4.0\" output = validate.validate_license(identifier = identifier) print(output) # True","title":"How to use"},{"location":"modules/validate/#validate-participants","text":"You can call the validate_participants method to validate the data needed to create a participants.tsv file.","title":"Validate Participants"},{"location":"modules/validate/#parameters_4","text":"","title":"Parameters"},{"location":"modules/validate/#data_3","text":"Provide the data required for your participants.tsv file in this paramater. Type Default value Required Accepted values Object {} yes Data object following the required schemas More information about the required data can be found in the participants schema. You can host the validator here if you want a better understanding or visualization of the schema for the input.","title":"data"},{"location":"modules/validate/#returns_4","text":"Type Description Boolean Returns True if the data is valid, False otherwise.","title":"Returns"},{"location":"modules/validate/#how-to-use_4","text":"from pyfairdatatools import validate data = { \"participant_id\": 'sub-id1', \"species\": 'rattus norvegicus', \"age\": 2 } output = validate.validate_participants(data = data) print(output) # True","title":"How to use"}]}